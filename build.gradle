buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url "https://jitpack.io" }
        maven { url "https://repo.spongepowered.org/maven" }
        flatDir dirs: "libs"
    }
    dependencies {
        classpath "com.github.yuko1101:ForgeGradle:85294a082f1ab27cd1ce2412a87efcafe6b65645:all"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }

}

apply plugin: "kotlin"
apply plugin: "net.minecraftforge.gradle.forge"

version = "0.2.0"
group = "io.github.yuko1101.asterium"
archivesBaseName = "Asterium"

sourceCompatibility = targetCompatibility = 1.8

//configurations.runtimeOnly.canBeResolved = true

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += [
//            "-Delementa.dev=true",
//            "-Delementa.debug=true",
            "-Delementa.invalid_usage=warn",
            "-Dmixin.debug.verbose=true",
            "-Dmixin.debug.export=true",
            "-Dlegacy.debugClassLoading=true",
            "-Dlegacy.debugClassLoadingSave=true",
            "-Dlegacy.debugClassLoadingFiner=true"
    ]
    clientRunArgs += ["--tweakClass=gg.essential.loader.stage0.EssentialSetupTweaker", "--mixins=mixins.asterium.json" ]
}

sourceSets {
    main.java.srcDirs += "src/main/kotlin"
}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

//    exclude "META-INF/**"
//    copy {
//        from("src/main/resources")
//        into("build/classes/main")
//    }
//
//    rename "(.+_at.cfg)", "META-INF/$1"
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    mavenCentral()
    maven {
        url = "https://repo.sk1er.club/repository/maven-public"
    }
    maven {
        url = "https://repo.sk1er.club/repository/maven-releases/"
    }
    maven {
        url = "https://repo.spongepowered.org/maven/"
    }
}

dependencies {
    provided "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    provided "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    shade "gg.essential:loader-launchwrapper:1.1.3"
    provided("gg.essential:essential-1.8.9-forge:11092+gecb85a783") {
        exclude module: "asm"
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "gson"
        exclude module: "kotlin-reflect"
        exclude module: "kotlin-stdlib-jdk8"
        exclude module: "kotlin-stdlib-jdk7"
        exclude module: "kotlin-stdlib"
    }

    annotationProcessor("org.spongepowered:mixin:0.8.5:processor")
    compileOnly("org.spongepowered:mixin:0.8.5")
}

jar {
    configurations.shade.collect { dep ->
        from(project.zipTree(dep)){
            exclude "META-INF", "META-INF/**"
        }
    }

    manifest.attributes(
            "ModSide": "CLIENT",
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
            "TweakOrder": "0",
            "MixinConfigs": "mixins.asterium.json",
            "ForceLoadAsMod": true,
            "ModType": "FML",
    )
}

tasks.withType(Jar).configureEach { compileJava.options.encoding = "UTF-8" }
